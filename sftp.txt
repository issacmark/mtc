import os
import ftplib

# Function to download a file
def download_file(ftp_client, remote_path, local_path):
  try:
    with open(local_path, 'wb') as local_file:
      ftp_client.retrbinary('RETR ' + remote_path, local_file.write)
    print(f"Download successful: {remote_path} -> {local_path}")
  except Exception as e:
    print(f"Download failed: {e}")

# Function to upload a file
def upload_file(ftp_client, local_path, remote_path):
  try:
    with open(local_path, 'rb') as local_file:
      ftp_client.storbinary('STOR ' + remote_path, local_file)
    print(f"Upload successful: {local_path} -> {remote_path}")
  except Exception as e:
    print(f"Upload failed: {e}")

# Get user input
host = input("Enter SFTP server hostname: ")
username = input("Enter SFTP username: ")
password = input("Enter SFTP password: ")
operation = input("Enter operation (download/upload): ")
source_path = input("Enter source path (local file): ")
destination_path = input("Enter destination path (remote file): ")

# Connect to FTP server (FTP is not SFTP, but offers basic file transfer)
try:
  ftp_client = ftplib.FTP(host, username, password)
except Exception as e:
  print(f"Connection failed: {e}")
  exit(1)

# Perform download or upload operation
if operation.lower() == "download":
  download_file(ftp_client, source_path, destination_path)
elif operation.lower() == "upload":
  upload_file(ftp_client, source_path, destination_path)
else:
  print(f"Error: Invalid operation '{operation}'.")

# Close connection
ftp_client.quit()

print("Operation completed.")
